[
  {
    "ContainingType": "API.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/Account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "API.DTOs.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.DTOs.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/Account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "API.DTOs.RegisterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.DTOs.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.AttendanceController",
    "Method": "GetAllAttendances",
    "RelativePath": "api/Attendance/GetAllSubjects",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[API.DTOs.AttendanceDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.DoctorsController",
    "Method": "GetDoctor",
    "RelativePath": "api/Doctors/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Doctors",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.DoctorsController",
    "Method": "AddDoctor",
    "RelativePath": "api/Doctors/Add_OR_UpdateDoctor",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Doctors",
        "Type": "API.DTOs.DoctorsDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Doctors",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.DoctorsController",
    "Method": "DashBordDoctors",
    "RelativePath": "api/Doctors/DashBordDoctors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Dr_Email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.DoctorsController",
    "Method": "DeleteDoctors",
    "RelativePath": "api/Doctors/DeleteDoctor",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.DoctorsController",
    "Method": "GetAllDoctors",
    "RelativePath": "api/Doctors/GetAllDoctors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[API.DTOs.DoctorsDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.DoctorsController",
    "Method": "GetDoctorByEmail",
    "RelativePath": "api/Doctors/GetDoctorByEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Doctors",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyController",
    "Method": "GetFaculty",
    "RelativePath": "api/Faculty/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Faculty",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyController",
    "Method": "AddFaculty",
    "RelativePath": "api/Faculty/Add_OR_UpdateFaculty",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Faculty",
        "Type": "Core.Entities.Faculty",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Faculty",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyController",
    "Method": "DeleteFaculty",
    "RelativePath": "api/Faculty/DeleteFaculty",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyController",
    "Method": "GetAllFaculty",
    "RelativePath": "api/Faculty/GetAllFaculty",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[Core.Entities.Faculty, Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearController",
    "Method": "GetFacultyYear",
    "RelativePath": "api/FacultyYear/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.FacultyYear",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearController",
    "Method": "AddFacultyYear",
    "RelativePath": "api/FacultyYear/Add_OR_UpdateFacultyYear",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FacultyYears",
        "Type": "API.DTOs.FacultyYearDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.FacultyYear",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearController",
    "Method": "DeleteFacultyYears",
    "RelativePath": "api/FacultyYear/DeleteFacultyYear",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearController",
    "Method": "GetAllFacultyYear",
    "RelativePath": "api/FacultyYear/GetAllFacultyYear",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[API.DTOs.FacultyYearDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearSemisterController",
    "Method": "GetSemister",
    "RelativePath": "api/FacultyYearSemister/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.FacultyYearSemister",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearSemisterController",
    "Method": "AddFacultyYearSemister",
    "RelativePath": "api/FacultyYearSemister/Add_OR_UpdateSemister",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FacultyYearSemisters",
        "Type": "API.DTOs.FacultyYearSemisterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.FacultyYearSemister",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearSemisterController",
    "Method": "DeleteFacultyYearSemisters",
    "RelativePath": "api/FacultyYearSemister/DeleteSemister",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.FacultyYearSemisterController",
    "Method": "GetAllSemisters",
    "RelativePath": "api/FacultyYearSemister/GetAllSemisters",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[API.DTOs.FacultyYearSemisterDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.LectureController",
    "Method": "AddOrUpdateLecture",
    "RelativePath": "api/Lecture/Add_OR_UpdateLecture",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "LectureDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Lecture_S",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.LectureController",
    "Method": "DeleteLecture",
    "RelativePath": "api/Lecture/DeleteLecture",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.LectureController",
    "Method": "GetAllLectures",
    "RelativePath": "api/Lecture/GetAllLecture",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Faculty_ID",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[LectureDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.NotificationController",
    "Method": "AddNotifications",
    "RelativePath": "api/Notification/AddNotifications",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Notification",
        "Type": "API.DTOs.NotificationDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Notification",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.NotificationController",
    "Method": "DeleteRooms",
    "RelativePath": "api/Notification/DeleteRoom",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.NotificationController",
    "Method": "GetAllNotifications",
    "RelativePath": "api/Notification/GetAllNotifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[Core.Entities.Notification, Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.RoomsController",
    "Method": "GetRoom",
    "RelativePath": "api/Rooms/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Rooms",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.RoomsController",
    "Method": "AddRoom",
    "RelativePath": "api/Rooms/Add_OR_UpdateRoom",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Rooms",
        "Type": "API.DTOs.RoomsDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Rooms",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.RoomsController",
    "Method": "DeleteRooms",
    "RelativePath": "api/Rooms/DeleteRoom",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.RoomsController",
    "Method": "GetAllRooms",
    "RelativePath": "api/Rooms/GetAllRooms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[Core.Entities.Rooms, Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SensorDataController",
    "Method": "PostData",
    "RelativePath": "api/SensorData",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sensorData",
        "Type": "API.DTOs.SensorDataDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.FingerId.SensorData",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SensorDataController",
    "Method": "GetAllData",
    "RelativePath": "api/SensorData",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[API.DTOs.SensorDataDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SensorDataController",
    "Method": "GetData",
    "RelativePath": "api/SensorData/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "API.DTOs.SensorDataDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SensorDataController",
    "Method": "ClearData",
    "RelativePath": "api/SensorData/clear",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.SensorDataController",
    "Method": "GetSensorDataCount",
    "RelativePath": "api/SensorData/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SensorDataController",
    "Method": "GenerateId",
    "RelativePath": "api/SensorData/generate-id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SensorDataController",
    "Method": "GetLastId",
    "RelativePath": "api/SensorData/last-id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.StudetsController",
    "Method": "AddStudet",
    "RelativePath": "api/Studets/Add_OR_UpdateStudent",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "studentDto",
        "Type": "API.DTOs.StudentsDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Students",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.StudetsController",
    "Method": "DashBordStudets",
    "RelativePath": "api/Studets/DashBordStudets",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.StudetsController",
    "Method": "DeleteStudents",
    "RelativePath": "api/Studets/DeleteStudent",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API.Controllers.StudetsController",
    "Method": "GetAllStudets",
    "RelativePath": "api/Studets/GetAllStudets",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[API.DTOs.StudentsDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.StudetsController",
    "Method": "GetStudetByIdFinger",
    "RelativePath": "api/Studets/GetStudentFinger",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Students",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.StudetsController",
    "Method": "GetStudentCount",
    "RelativePath": "api/Studets/GetStudentsCount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.StudetsController",
    "Method": "GetStudetByEmail",
    "RelativePath": "api/Studets/GetStudetByEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Students",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SubjectsController",
    "Method": "GetSubject",
    "RelativePath": "api/Subjects/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Subjects",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SubjectsController",
    "Method": "AddSubject",
    "RelativePath": "api/Subjects/Add_OR_UpdateSubject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Subjects",
        "Type": "SubjectsDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Entities.Subjects",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SubjectsController",
    "Method": "DeleteSubjects",
    "RelativePath": "api/Subjects/DeleteSubject",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SubjectsController",
    "Method": "GetAllSubjects",
    "RelativePath": "api/Subjects/GetAllSubjects",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IReadOnlyList\u00601[[SubjectsDTO, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API.Controllers.SubjectsController",
    "Method": "GetSubjectCount",
    "RelativePath": "api/Subjects/GetSubjectsCount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]